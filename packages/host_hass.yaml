homeassistant:
  customize:
    sensor.os_version:
      friendly_name: OS

sensor:

  - platform: command_line
    name: os_version
    scan_interval: 86400
    command: !secret host_os_version

  - platform: command_line
    name: os_check_update
    scan_interval: 86400
    command: !secret host_os_check_update

  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: processor_use
      - type: memory_use_percent
      - type: last_boot
      - type: throughput_network_in
        arg: enp2s0
      - type: throughput_network_out
        arg: enp2s0

  - platform: rest
    name: ha_dockermon_cpu
    resource: http://localhost:8126/container/homeassistant/stats
    value_template: >
      {{ (( value_json.cpu_stats.cpu_usage.total_usage /  value_json.cpu_stats.system_cpu_usage ) * value_json.cpu_stats.online_cpus * 100 )| round(1) }}

  - platform: rest
    name: ha_dockermon_mem
    resource: http://localhost:8126/container/homeassistant/stats
    value_template: >
      {{ (( value_json.memory_stats.usage /  value_json.memory_stats.limit ) * 100 ) | round(1) }}

  - platform: rest
    name: ha_dockermon_total
    resource: http://localhost:8126/containers
    value_template: >
      {{ value_json | length }}

  - platform: rest
    name: ha_dockermon_running
    resource: http://localhost:8126/containers
    value_template: >
      {{ value_json | selectattr('State', 'equalto', 'running') | list | length }}

  - platform: rest
    name: ha_dockermon_paused
    resource: http://localhost:8126/containers
    value_template: >
      {{ value_json | selectattr('State', 'equalto', 'paused') | list | length }}

  - platform: rest
    name: ha_dockermon_stopped
    resource: http://localhost:8126/containers
    value_template: >
      {{ value_json | selectattr('State', 'equalto', 'exited') | list | length }}

  - platform: command_line
    name: full_dockermon_cpu
    command: !secret full_dockermon_cpu

  - platform: command_line
    name: full_dockermon_mem
    command: !secret full_dockermon_mem

  - platform: rest
    name: ha_dockermon_uptime
    resource: http://localhost:8126/container/homeassistant/
    value_template: >
      {{ 'Depuis ' + value_json.status.split(' ')[1:] | join(' ') | replace ('About a minute', 'une minute') | replace ('environ une minute', '1 minute')
      | replace ('About an hour', 'une heure')  | replace ('seconds', 'secondes') | replace ('minutes', 'minutes')
      | replace ('hours', 'heures') | replace ('days', 'jours')}}

  # https://github.com/NemesisRE/sensor.plex_recently_added
  - platform: plex_recently_added
    token: !secret plex_token
    host: !secret plex_host
    port: !secret plex_port
    max: 1
    img_dir: '/'
    image_resolution: 800
    
template:
  - sensor:
      - unique_id: domain_counter
        state: >
          {{ states | count }}
        attributes:
          automation: >
            {{ states.automation | count }}
          binary_sensor: >
            {{ states.binary_sensor | count }}
          device_tracker: >
            {{ states.device_tracker | count }}
          light: >
            {{ states.light | count }}
          media_player: >
            {{ states.media_player | count }}
          sensor: >
            {{ states.sensor | count }}
          switch: >
            {{ states.switch | count }}
          other: >
            {% set exclude = this.attributes | list %}
            {{ states | rejectattr('domain', 'in', exclude) | list | count }}

shell_command:
  ha_dockermon_restart_container: curl -s localhost:8126/container/homeassistant/restart
  purge_log: truncate -s 0 /config/home-assistant.log
  host_reboot: !secret host_reboot
  host_shutdown: !secret host_shutdown

automation:
  - alias: purge_log_filesize
    id: '3331821824310'
    trigger:
      platform: numeric_state
      entity_id: sensor.home_assistant_log_size
      above: 50
    action:
      service: shell_command.purge_log

  - alias: backup_ha_monthly
    trigger:
      platform: time
      at: 04:00:00
    condition: >
      {{ now().day == 1 }}
    action:
      service: backup.create
