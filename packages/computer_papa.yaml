switch:
  - platform: wake_on_lan
    name: wol_papa
    mac: !secret wake_on_lan_papa_mac
    host: !secret wake_on_lan_papa_host
    broadcast_address: 192.168.1.255

  - platform: template
    switches:
      computer_papa:
        friendly_name: Papa
        icon_template: cli:imac-alternative
        value_template: "{{ is_state('switch.wol_papa', 'on') }}"
        turn_on:
          - action: switch.turn_on
            target:
              entity_id: switch.wol_papa
          - action: script.turn_on
            target:
              entity_id: script.computer_papa_load
        turn_off:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.computer_papa_lock
                    state: "on"
                sequence:
                  - service: browser_mod.toast
                    data:
                      duration: 8000
                      message: L'ordinateur est verrouillé...
            default:
              - action: switch.turn_on
                target:
                  entity_id: switch.bruno_shutdown
              - service: script.turn_on
                target:
                  entity_id: script.computer_papa_load

input_boolean:
  computer_papa_lock:
    name: Verrouillage
    icon: mdi:lock
  computer_papa_load:
    name: Load
    icon: mdi:reload

template:
  sensor:
    - name: bruno_storage_c_used_space_percentage
      unit_of_measurement: "%"
      state: "{{ state_attr('sensor.bruno_storage_c', 'UsedSpacePercentage') }}"
    - name: bruno_storage_d_used_space_percentage
      unit_of_measurement: "%"
      state: "{{ state_attr('sensor.bruno_storage_d', 'UsedSpacePercentage') }}"
    - name: bruno_uptime
      state: >
        {% set startup_time_state = states('sensor.bruno_lastboot') %}
        {% if startup_time_state not in ['unknown', 'unavailable'] %}
          {% set now = as_timestamp(now()) %}
          {% set startup_time = as_timestamp(strptime(startup_time_state, "%Y-%m-%dT%H:%M:%S%z")) %}
          {% set uptime_seconds = now - startup_time %}
          {% set uptime_hours = (uptime_seconds / 3600) | int %}
          {% set uptime_minutes = ((uptime_seconds % 3600) / 60) | int %}
          {{ "{:02d}:{:02d}".format(uptime_hours, uptime_minutes) }}
        {% else %}
          Pas encore disponible
        {% endif %}

homeassistant:
  customize:
    sensor.bruno_uptime:
      friendly_name: Uptime
      icon: mdi:calendar-clock

    sensor.bruno_storage_c_used_space_percentage:
      friendly_name: System SSD
      icon: cil:imac-ssd

    sensor.bruno_storage_d_used_space_percentage:
      friendly_name: HDD
      icon: mdi:harddisk

    sensor.bruno_cpuload:
      friendly_name: Processeur
      icon: mdi:chip

    sensor.bruno_memoryusage:
      friendly_name: Mémoire
      icon: mdi:memory

script:
  computer_papa_load:
    alias: computer_papa_load
    sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.computer_papa_load
      - wait_for_trigger:
          - platform: state
            entity_id: switch.computer_papa
        timeout: "00:10:00"
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.computer_papa_load
    mode: single

automation:
  - alias: bruno_screenshot
    mode: single
    triggers:
      - trigger: time_pattern
        minutes: "/5"
    actions:
      - action: button.press
        target:
          entity_id: button.bruno_screenshot
    conditions:
      - condition: state
        entity_id: switch.computer_papa
        state: "on"

#camera:
#  - platform: local_file
#    file_path: /media/BRUNO-screenshot.png
#    name: "bruno"
