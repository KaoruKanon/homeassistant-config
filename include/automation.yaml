
automation:

    ####################################################
    #                                                  #
    #                   AUTOMATIONS                    #
    #                                                  #
    ####################################################

  - alias: homeassistant_start
    initial_state: true
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: browser_mod.close_popup
      - delay:
          seconds: 1
      - service: browser_mod.lovelace_reload
      - delay:
          seconds: 10
      - service: shell_command.fullykiosk_restart_app
      - choose:
        - conditions:
            - condition: state
              entity_id: 
                ['media_player.google_home_cuisine', 
                'media_player.google_home_chambre', 'media_player.spotify', 'media_player.bouygues4k']
              state: 'off'
          sequence:
            - service: input_select.select_option
              data:
                entity_id: input_select.conditional_media
                option: Senast nedladdat
      - delay:
          seconds: 10
      - service: shell_command.fullykiosk_load_start_url
      - choose:
        - conditions:
            - condition: state
              entity_id: light.hall
              state: 'off'
          sequence:
            - service: switch.turn_on
              entity_id: switch.fullykiosk_screensaver

  - alias: lovelace_updated_ignore
    mode: restart
    initial_state: true
    trigger:
      - platform: event
        event_type: lovelace_updated
    action:
      - service: browser_mod.toast
        data:
          duration: 1
          message: ' '

  - alias: clear_log_filesize
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: sensor.home_assistant_log
        above: 50
    action:
      - service: shell_command.clear_logs

  - alias: hacs_version_grep
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.hacs
    action:
      - service: homeassistant.update_entity
        entity_id: sensor.hacs_version

  - alias: update_hass_release_notes
    initial_state: true
    trigger:
      - platform: state
        entity_id: ['sensor.hass_version_latest', 'sensor.hass_version_latest_beta']
    action:
      - service: homeassistant.update_entity
        entity_id:
          ['sensor.hass_release_notes', 'sensor.hass_release_notes_rc']

  - alias: auto_snapshot
    trigger:
      - platform: time
        at : "00:00:00"
    action:
      - service: hassio.snapshot_full
        data:
          name: >-
            auto_backup_{{ states("sensor.date") | replace("-", "")}}_{{
            states("sensor.time") | replace(":", "") }}


  - alias: get_google_home_token_at_ha_restart
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: shell_command.google_home_get_token

  - alias: get_google_home_token_every_hour
    trigger:
      - platform: time_pattern
        hours: '*'
    action:
      - service: shell_command.google_home_get_token

  - alias: enedis_update_data
    trigger:
      - platform: time_pattern
        hours: '*'
    action:
      - service: shell_command.enedis_update_data

  - alias: update_timer
    trigger:
      - platform: time_pattern
        seconds: '*'
    condition:
      - condition: not
        conditions:
          - condition: state
            entity_id: sensor.next_timer_human
            state: 'Google Home indisponible'
          - condition: state
            entity_id: sensor.next_timer_human
            state: 'Pas de timer'
    action:
      - service: homeassistant.update_entity
        entity_id: sensor.next_timer_human


    ####################################################
    #                                                  #
    #                  TURN ON / OFF                   #
    #                                                  #
    ####################################################

  - alias: toggle_bureau
    trigger:
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.switch_1
          click_type: single
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.switch_2
          click_type: single
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.switch_3
          click_type: single
    condition: []
    action:
      - type: toggle
        device_id: 4e0b5d4dbf691fc12fa8de5238ef06a5
        entity_id: light.yeelight_stripe
        domain: light
      - type: toggle
        device_id: 55015bc6c839dd914c3a178efc9fc22f
        entity_id: light.lampe_japonaise
        domain: light
    mode: single

  - alias: toggle_plafond
    trigger:
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.switch_1
          click_type: double
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.switch_2
          click_type: double
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.switch_3
          click_type: double
    condition: []
    action:
      - type: toggle
        device_id: abe1b32f1fb25591f891bab663c8510d
        entity_id: light.plafond_1
        domain: light
      - type: toggle
        device_id: aeb73c9f9cd35cca09e1a5a51eb570b1
        entity_id: light.plafond_2
        domain: light
    mode: single

  - alias: allumer_chambre
    trigger:
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.switch_1
          click_type: long_click_press
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.switch_2
          click_type: long_click_press
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.switch_3
          click_type: long_click_press
    condition:
      - condition: and
        conditions:
          - condition: device
            type: is_off
            device_id: 4e0b5d4dbf691fc12fa8de5238ef06a5
            entity_id: light.yeelight_stripe
            domain: light
          - condition: device
            type: is_off
            device_id: 55015bc6c839dd914c3a178efc9fc22f
            entity_id: light.lampe_japonaise
            domain: light
          - condition: device
            type: is_off
            device_id: abe1b32f1fb25591f891bab663c8510d
            entity_id: light.plafond_1
            domain: light
          - condition: device
            type: is_off
            device_id: aeb73c9f9cd35cca09e1a5a51eb570b1
            entity_id: light.plafond_2
            domain: light
    action:
      - type: turn_on
        device_id: 4e0b5d4dbf691fc12fa8de5238ef06a5
        entity_id: light.yeelight_stripe
        domain: light
      - type: turn_on
        device_id: abe1b32f1fb25591f891bab663c8510d
        entity_id: light.plafond_1
        domain: light
      - type: turn_on
        device_id: abe1b32f1fb25591f891bab663c8510d
        entity_id: light.plafond_2
        domain: light
      - type: turn_on
        device_id: 55015bc6c839dd914c3a178efc9fc22f
        entity_id: light.lampe_japonaise
        domain: light
    mode: single

  - alias: eteindre_chambre
    trigger:
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.switch_1
          click_type: long_click_press
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.switch_2
          click_type: long_click_press
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.switch_3
          click_type: long_click_press
    condition:
      - condition: or
        conditions:
          - condition: device
            type: is_on
            device_id: 4e0b5d4dbf691fc12fa8de5238ef06a5
            entity_id: light.yeelight_stripe
            domain: light
          - condition: device
            type: is_on
            device_id: 55015bc6c839dd914c3a178efc9fc22f
            entity_id: light.lampe_japonaise
            domain: light
          - condition: device
            type: is_on
            device_id: abe1b32f1fb25591f891bab663c8510d
            entity_id: light.plafond_1
            domain: light
          - condition: device
            type: is_on
            device_id: aeb73c9f9cd35cca09e1a5a51eb570b1
            entity_id: light.plafond_2
            domain: light
    action:
      - type: turn_off
        device_id: 4e0b5d4dbf691fc12fa8de5238ef06a5
        entity_id: light.yeelight_stripe
        domain: light
      - type: turn_off
        device_id: abe1b32f1fb25591f891bab663c8510d
        entity_id: light.plafond_1
        domain: light
      - type: turn_off
        device_id: abe1b32f1fb25591f891bab663c8510d
        entity_id: light.plafond_2
        domain: light
      - type: turn_off
        device_id: 55015bc6c839dd914c3a178efc9fc22f
        entity_id: light.lampe_japonaise
        domain: light
    mode: single

  #webhook pour google home #
  - alias: webhook_wol_computer_rig_kaoru
    trigger:
    - platform: webhook
      webhook_id: WOLKAORU
    condition: []
    action:
    - service: switch.turn_on
      data: {}
      entity_id: switch.wol_kaoru

  - alias: webhook_wol_turnoff_computer_rig_kaoru
    trigger:
    - platform: webhook
      webhook_id: TURNOFFKAORU
    condition: []
    action:
    - service: switch.turn_on
      data: {}
      entity_id: switch.computer_rig_kaoru_shutdown

  - alias: turn_off_gps_home_absence
    trigger:
    - platform: state
      entity_id: person.kaoru
      from: 'home '
      to: not_home
    - platform: state
      entity_id: person.papa
      from: home
      to: not_home
    condition:
    - condition: and
      conditions:
      - condition: state
        entity_id: person.kaoru
        state: not_home
      - condition: state
        entity_id: person.papa
        state: not_home
    action:
    - type: turn_off
      device_id: 8cda3d2c1da24ec8238bc9d454cdc172
      entity_id: light.yeelight_stripe
      domain: light
    - type: turn_off
      device_id: faad3116c2e75034b43c6f1bcf3adb3a
      entity_id: light.lampe_japonaise
      domain: light
    - type: turn_off
      device_id: 69ba9f289ac3e2853905c24a4dc3ce16
      entity_id: light.plafond_1
      domain: light
    - type: turn_off
      device_id: 1c5afbe389434f52cf1184503b61096d
      entity_id: light.plafond_2
      domain: light
    - type: turn_off
      device_id: 227c406d791ae230c40220b8f44dd05a
      entity_id: light.salon_1
      domain: light
    - type: turn_off
      device_id: edb4be04b0d44a91b2cf5949b421aa10
      entity_id: light.salon_2
      domain: light

  - alias: turn_off_gps_papa_absence
    trigger:
      - platform: state
        entity_id: person.papa
        from: home
        to: not_home
    condition:
      - condition: state
        entity_id: person.papa
        state: not_home
      - condition: state
        state: 'on'
        entity_id: switch.computer_papa
    action:
      - service: script.computer_papa_shutdown
        data: {}


    ####################################################
    #                                                  #
    #                  NOTIFICATIONS                   #
    #                                                  #
    ####################################################

  # - alias: toast
  #   initial_state: true
  #   trigger:
  #     - platform: state
  #       entity_id:
  #         ['input_boolean.motion_garderob', 'input_boolean.motion_badrum', 
  #         'binary_sensor.wemo_motion']
  #       from: 'off'
  #       to: 'on'
  #   action:
  #     - service: browser_mod.toast
  #       data:
  #         duration: 8000
  #         message: >
  #           Rörelse detekterat i {{ trigger.to_state.name }}
  #     - service: input_boolean.turn_off
  #       data:
  #         entity_id: >
  #           {{ trigger.entity_id }}

  # - alias: macos_notification_motion_hall
  #   initial_state: false
  #   trigger:
  #     - platform: state
  #       entity_id: input_boolean.motion_hall
  #       from: 'off'
  #       to: 'on'
  #   condition:
  #     - condition: state
  #       entity_id: switch.computer_imac
  #       state: 'on'
  #   action:
  #     - service: shell_command.imac_notify_motion_hallway

  - alias: notify_hass_rc
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.hass_version_latest_beta
    condition:
      - condition: state
        entity_id: sensor.hass_dev_release
        state: 
          ['Demain', 'Aujourd\u0027hui']
    action:
      - service: notify.mobile_app_oneplus_8_pro
        data:
          title: >
                HASS beta {{ states('sensor.hass_version_latest_beta') }} bientôt disponible
          message: Appuyez pour lire les informations de version beta
          data:
            clickAction: 'https://rc.home-assistant.io/latest-release-notes/'

  - alias: notify_hass_update
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.hass_version
    condition:
      condition: not
      conditions:
        - condition: state
          entity_id: sensor.hass_version
          state: Latest
    action:
      - service: notify.mobile_app_oneplus_8_pro
        data:
          title: >
            {{ states('sensor.hass_version') }} disponible {{ '\U0001F389' }}
          message: Maintenez pour mettre à jour
          data:
            data:
              clickAction: https://www.home-assistant.io/latest-release-notes/

  # - alias: notify_hass_update_action
  #   initial_state: true
  #   trigger:
  #     - platform: event
  #       event_type: ios.notification_action_fired
  #       event_data:
  #         actionName: START_WATCHTOWER
  #   action:
  #     - service: switch.turn_on
  #       entity_id: switch.watchtower


    ####################################################
    #                                                  #
    #                     MONITORS                     #
    #                                                  #
    ####################################################

  # COMPUTER WILLIAM #
  # - alias: computer_kaoru_volume_slider
  #   initial_state: true
  #   trigger:
  #     - platform: state
  #       entity_id: input_number.computer_kaoru_vol_slider
  #   condition:
  #     - condition: state
  #       entity_id: switch.computer_kaoru
  #       state: 'on'
  #   action:
  #     - service: shell_command.monitors_volume_slider
  #     - service: homeassistant.update_entity
  #       entity_id: binary_sensor.monitors_mute_check
  #     - service: homeassistant.update_entity
  #       entity_id: sensor.monitors_volume

  # - alias: monitors_volume_slider
  #   initial_state: true
  #   trigger:
  #     - platform: state
  #       entity_id: input_number.monitors_volume
  #   condition:
  #     - condition: state
  #       entity_id: switch.computer_imac
  #       state: 'on'
  #   action:
  #     - service: shell_command.monitors_volume_slider
  #     - service: homeassistant.update_entity
  #       entity_id: binary_sensor.monitors_mute_check
  #     - service: homeassistant.update_entity
  #       entity_id: sensor.monitors_volume

  # - alias: monitors_volume_update
  #   initial_state: true
  #   trigger:
  #     - platform: state
  #       entity_id: sensor.monitors_volume
  #   condition:
  #     - condition: state
  #       entity_id: switch.computer_imac
  #       state: 'on'
  #   action:
  #     - service: homeassistant.update_entity
  #       entity_id: binary_sensor.monitors_mute_check
  #     - service: input_number.set_value
  #       data:
  #         entity_id: input_number.monitors_volume
  #         value: >
  #           {% set max_volume = 75 %} {% set min_volume = 7 %}
  #           {% if states(trigger.entity_id) | int > max_volume %}
  #             {{ max_volume }}
  #           {% elif states(trigger.entity_id) | int < min_volume %}
  #             {{ min_volume }}
  #           {% else %}
  #             {{ states(trigger.entity_id) }}
  #           {% endif %}


    ####################################################
    #                                                  #
    #                      TABLET                      #
    #                                                  #
    ####################################################

  - alias: fullykiosk_brightness_slider
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_number.fullykiosk_brightness_slider
    action:
      - service: shell_command.fullykiosk_brightness_slider

  - alias: fullykiosk_close_popup
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.fullykiosk_screensaver
        from: 'off'
        to: 'on'
        for:
          minutes: 10
    action:
      - service: browser_mod.close_popup
        data:
          deviceID: tablet

  - alias: fullykiosk_turn_on_screen
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.motion_hall
        from: 'off'
        to: 'on'
    action:
      - service: switch.turn_off
        entity_id: switch.fullykiosk_screensaver
      - service: input_number.set_value
        data:
          entity_id: input_number.fullykiosk_brightness_slider
          value: >
            {{ 90 if is_state('sun.sun', 'above_horizon') else 60 }}
      - service: input_boolean.turn_off
        data:
          entity_id: >
            {{ trigger.entity_id }}

  - alias: fullykiosk_turn_off_screen
    initial_state: true
    trigger:
      - platform: state
        entity_id: light.hall
        from: 'on'
        to: 'off'
    action:
      - service: switch.turn_on
        entity_id: switch.fullykiosk_screensaver

    ####################################################
    #                                                  #
    #                     LOADING                      #
    #                                                  #
    ####################################################

  - alias: turn_off_loading_wheel
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          ['media_player.samsung_tv_remote', 'switch.computer_rig_kaoru', 'switch.computer_papa',
          'switch.playstation_4', 'fan.sovrum_anslut', 'switch.air_purifier']
    action:
      - service: input_boolean.turn_off
        data:
          entity_id: >
            {{ trigger.entity_id | replace(trigger.entity_id.split('.')[0], 'input_boolean') }}

  - alias: turn_off_loading_wheel_failsafe
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          ['input_boolean.samsung_tv_remote', 'input_boolean.computer_rig_kaoru', 'input_boolean.computer_papa',
          'input_boolean.playstation_4', 'input_boolean.sovrum_anslut', 'input_boolean.air_purifier']
        to: 'on'
        for:
          minutes: 1
    action:
      - service: input_boolean.turn_off
        data:
          entity_id: >
            {{ trigger.entity_id }}

    ####################################################
    #                                                  #
    #                    HDMI / TV                     #
    #                                                  #
    ####################################################

  # - alias: hdmi_input_select
  #   initial_state: true
  #   trigger:
  #     - platform: state
  #       entity_id: input_select.hdmi
  #   action:
  #     - service: media_player.select_source
  #       data:
  #         entity_id: media_player.sony_bravia
  #         source: >
  #           {{ states(trigger.entity_id) }}

  - alias: hdmi2_input_select
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_select.hdmi2
    action:
      - service: media_player.select_source
        data:
          entity_id: media_player.samsung_tv_remote
          source: >
            {{ states(trigger.entity_id) }}

  - alias: turn_on_tv_failsafe
    initial_state: true
    trigger:
      - platform: event
        event_type: call_service
        event_data:
          domain: media_player
          service: turn_on
          service_data:
            entity_id: media_player.sony_bravia
    action:
      - service: media_player.turn_on
        data:
          entity_id: media_player.vardagsrum
      - delay:
          seconds: 1
      - service: remote.send_command
        data:
          entity_id: remote.vardagsrum
          command: menu

  - alias: turn_on_tv2_failsafe
    initial_state: true
    trigger:
      - platform: event
        event_type: call_service
        event_data:
          domain: media_player
          service: turn_on
          service_data:
            entity_id: media_player.samsung_tv_remote
    action:
      - service: media_player.turn_on
        data:
          entity_id: media_player.sovrum
      - delay:
          seconds: 1
      - service: remote.send_command
        data:
          entity_id: remote.sovrum
          command: menu

    ####################################################
    #                                                  #
    #                  LAUNDRY TIMER                   #
    #                                                  #
    ####################################################

    #     event_type: timer.finished
    #     event_data:
    #       entity_id: timer.laundry
    # action:
    #   - service: media_player.play_media
    #     data:
    #       entity_id: media_player.tablet
    #       media_content_id: /local/sound/timer.mp3
    #       media_content_type: music
    #   - delay:
    #       seconds: 2
    #   - service: media_player.play_media
    #     data:
    #       entity_id: media_player.tablet
    #       media_content_id: >
    #         {{ ['/local/sound/tts_custom/timer_tvatten_ar_fardig.mp3',
    #             '/local/sound/tts_custom/timer_tvatten_ar_klar.mp3',
    #             '/local/sound/tts_custom/timer_dags_att_ga_ner.mp3'] | random }}
    #       media_content_type: music
    #   - service: notify.mobile_app_iphone
    #     data:
    #       message: >
    #         {{'\U0001F9FA'}} {{ ['Tvätten är färdig', 'Tvätten är klar', 'Dags att gå ner'] | random }}
    #   - service: shell_command.imac_notify_laundry
    #   - delay:
    #       seconds: 3


      ####################################################
      #                                                  #
      #                CONDITIONAL MEDIA                 #
      #                                                  #
      ####################################################

  - alias: conditional_media_playing
    initial_state: true
    mode: restart
    trigger:
      - platform: state
        entity_id:
          ['media_player.google_home_cuisine', 'media_player.google_home_chambre', 'media_player.spotify', 'media_player.bouygues4k']
        to: playing
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.conditional_media
          option: >
            {{ trigger.to_state.name }}
  - alias: conditional_media_paused_idle
    initial_state: true
    mode: restart
    trigger:
      - platform: state
        entity_id:
          ['media_player.google_home_cuisine', 'media_player.google_home_chambre', 'media_player.spotify', 'media_player.bouygues4k']
        to:
          ['off', 'idle', 'standby']
      - platform: state
        entity_id:
          ['media_player.google_home_cuisine', 'media_player.google_home_chambre', 'media_player.spotify', 'media_player.bouygues4k']
        to: paused
        for:
          minutes: 10
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.conditional_media
          option: >
            {% set media_players = 
              [states.media_player.google_home_cuisine, states.media_player.google_home_chambre, states.media_player.spotify, states.media_player.bouygues4k] %}
            {% if media_players | selectattr('state','eq','playing') | list | count == 0 %}
              {% if media_players | selectattr('state','eq','paused') | list | count == 0 %}
              Senast nedladdat
              {% else %}
              {{ media_players | selectattr('state','eq','paused') | map(attribute='name') | max }}
              {% endif %}
            {% else %}
            {{ media_players | selectattr('state','eq','playing') | map(attribute='name') | max }}
            {% endif %}
  - alias: conditional_media_all_off
    initial_state: true
    trigger:
      - platform: template
        value_template: >
          {{ is_state('media_player.vardagsrum', 'idle') and
          is_state('media_player.google_home_cuisine', 'off') and
          is_state('media_player.playstation_4', 'standby') and
          is_state('media_player.google_home_chambre', 'off') and
          is_state('media_player.spotify', 'idle') and
          is_state('media_player.bouygues4k', 'idle')
          or
          is_state('media_player.sony_bravia', 'off') and
          is_state('media_player.google_home_cuisine', 'off') and
          is_state('media_player.google_home_chambre', 'off') and
          is_state('media_player.spotify', 'idle') and
          is_state('media_player.bouygues4k', 'idle') }}
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.conditional_media
          option: Senast nedladdat

  - alias: conditional_media_atv1_fix
    initial_state: true
    trigger:
      - platform: template
        value_template: >
          {{ is_state('media_player.vardagsrum', 'paused') and 
          is_state_attr('media_player.vardagsrum', 'media_title', 'No title') }}
        for:
          seconds: 5
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.conditional_media
          option: >
            {% set media_players = 
              [states.media_player.google_home_cuisine, states.media_player.google_home_chambre, states.media_player.spotify, states.media_player.bouygues4k] %}
            {% if media_players | selectattr('state','eq','playing') | list | count == 0 %}
              {% if media_players | selectattr('state','eq','paused') | list | count == 0 %}
              Senast nedladdat
              {% elif is_state('media_player.vardagsrum', 'paused') and 
              is_state_attr('media_player.vardagsrum', 'media_title', 'No title') or
              is_state('media_player.sovrum', 'paused') and 
              is_state_attr('media_player.sovrum', 'media_title', 'No title')
              %}
              Senast nedladdat
              {% else %}
              {{ media_players | selectattr('state','eq','paused') | map(attribute='name') | max }}
              {% endif %}
            {% else %}
            {{ media_players | selectattr('state','eq','playing') | map(attribute='name') | max }}
            {% endif %}
  - alias: conditional_media_atv2_fix
    initial_state: true
    trigger:
      - platform: template
        value_template: >
          {{ is_state('media_player.sovrum', 'paused') and 
          is_state_attr('media_player.sovrum', 'media_title', 'No title') }}
        for:
          seconds: 5
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.conditional_media
          option: >
            {% set media_players = 
              [states.media_player.google_home_cuisine, states.media_player.google_home_chambre, states.media_player.spotify, states.media_player.bouygues4k] %}
            {% if media_players | selectattr('state','eq','playing') | list | count == 0 %}
              {% if media_players | selectattr('state','eq','paused') | list | count == 0 %}
              Senast nedladdat
              {% elif is_state('media_player.vardagsrum', 'paused') and 
              is_state_attr('media_player.vardagsrum', 'media_title', 'No title') or
              is_state('media_player.sovrum', 'paused') and 
              is_state_attr('media_player.sovrum', 'media_title', 'No title')
              %}
              Senast nedladdat
              {% else %}
              {{ media_players | selectattr('state','eq','paused') | map(attribute='name') | max }}
              {% endif %}
            {% else %}
            {{ media_players | selectattr('state','eq','playing') | map(attribute='name') | max }}
            {% endif %}


    ####################################################
    #                                                  #
    #                     UI SOUND                     #
    #                                                  #
    ####################################################

  - alias: ui_sound_popup
    initial_state: true
    trigger:
      - platform: event
        event_type: call_service
        event_data:
          domain: browser_mod
          service: popup
    condition:
      - condition: state
        entity_id: switch.fullykiosk_screensaver
        state: 'off'
    action:
      - service: media_player.play_media
        data:
          entity_id: media_player.tablet
          media_content_id: /local/sound/popup.m4a
          media_content_type: music

    ####################################################
    #                                                  #
    #                       TEST                       #
    #                                                  #
    ####################################################

    # ...
