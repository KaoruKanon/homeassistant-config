
switch:

    ####################################################
    #                                                  #
    #                     SWITCHES                     #
    #                                                  #
    ####################################################

  - platform: wake_on_lan
    name: wol_rig_kaoru
    mac: !secret wake_on_lan_kaoru_mac
    host: !secret wake_on_lan_kaoru_host
    broadcast_address: "192.168.1.255"

  - platform: wake_on_lan
    name: wol_papa
    mac: !secret wake_on_lan_papa_mac
    host: !secret wake_on_lan_papa_host
    broadcast_address: 192.168.1.255

  - platform: wake_on_lan
    name: wol_samsungtv
    mac: !secret wake_on_lan_samsungtv_mac
    host: !secret wake_on_lan_samsungtv_host
    broadcast_address: 192.168.1.255

  - platform: rest
    name: Watchtower
    resource: !secret ha_dockermon_watchtower
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'


    ####################################################
    #                                                  #
    #                     TEMPLATE                     #
    #                                                  #
    ####################################################

  - platform: template
    switches:
      computer_rig_kaoru:
        friendly_name: Kaoru
        icon_template: custom:imac-alternative
        value_template: "{{ is_state('switch.wol_rig_kaoru', 'on') }}"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.computer_rig_kaoru
          - service: switch.turn_on
            entity_id: switch.wol_rig_kaoru
        turn_off:
          - choose:
            - conditions:
                - condition: state
                  entity_id: input_boolean.computer_rig_kaoru_lock
                  state: 'on'
              sequence:
                - service: browser_mod.toast
                  data:
                    duration: 8000
                    message: L'ordinateur est verrouillé...
            default:
              - service: input_boolean.turn_on
                entity_id: input_boolean.computer_rig_kaoru
              - service: script.computer_rig_kaoru_shutdown

      computer_papa:
        friendly_name: Papa
        icon_template: custom:imac-alternative
        value_template: "{{ is_state('switch.wol_papa', 'on') }}"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.computer_papa
          - service: switch.turn_on
            entity_id: switch.wol_papa
        turn_off:
          - choose:
            - conditions:
                - condition: state
                  entity_id: input_boolean.computer_papa_lock
                  state: 'on'
              sequence:
                - service: browser_mod.toast
                  data:
                    duration: 8000
                    message: L'ordinateur est verrouillé...
            default:
              - service: input_boolean.turn_on
                entity_id: input_boolean.computer_papa
              - service: script.computer_papa_shutdown


      # computer_imac:
      #   friendly_name: Dator
      #   icon_template: custom:imac-alternative
      #   value_template: "{{ is_state('switch.wol_imac', 'on') }}"
      #   turn_on:
      #     - service: input_boolean.turn_on
      #       entity_id: input_boolean.computer_imac
      #     - service: shell_command.imac_switchbot_rpi
      #     - service: light.turn_on
      #       entity_id: light.datorlampa
      #   turn_off:
      #     - choose:
      #       - conditions:
      #           - condition: state
      #             entity_id: input_boolean.computer_lock
      #             state: 'on'
      #         sequence:
      #           - service: browser_mod.toast
      #             data:
      #               duration: 8000
      #               message: Dator är låst från att stängas av...
      #       default:
      #         - service: input_boolean.turn_on
      #           entity_id: input_boolean.computer_imac
      #         - service: shell_command.imac_off

      tv_samsung:
        friendly_name: "TV"
        icon_template: custom:tv
        value_template: "{{ is_state('media_player.samsung_tv_remote', 'on') }}"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.samsung_tv_remote
          - service: remote.send_command
            data:
              entity_id: remote.sovrum
              command: menu
        turn_off:
          - service: input_boolean.turn_on
            entity_id: input_boolean.samsung_tv_remote
          - service: media_player.turn_off
            entity_id: media_player.samsung_tv_remote

      # playstation_4:
      #   friendly_name: Playstation
      #   icon_template: mdi:sony-playstation
      #   value_template: "{{ is_state('binary_sensor.playstation_4', 'on') }}"
      #   turn_on:
      #     - service: input_boolean.turn_on
      #       entity_id: input_boolean.playstation_4
      #     - service: media_player.turn_on
      #       entity_id: media_player.playstation_4
      #   turn_off:
      #     - service: input_boolean.turn_on
      #       entity_id: input_boolean.playstation_4
      #     - service: media_player.turn_off
      #       entity_id: media_player.playstation_4

      fullykiosk_screensaver:
        friendly_name: Ecran de veille
        icon_template: mdi:power-sleep
        value_template: "{{ is_state_attr('sensor.fullykiosk', 'isInScreensaver', true) }}"
        turn_on:
          - service: shell_command.fullykiosk_screensaver_on
        turn_off:
          - service: shell_command.fullykiosk_screensaver_off
