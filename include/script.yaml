script:

  ####################################################
  #                                                  #
  #                 computers                        #
  #                                                  #
  ####################################################

  ### COMPUTER KAORU ###

  computer_rig_kaoru_shutdown:
    alias: "Kaoru computer - Shutdown"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/rig-kaoru/commands/shutdown"
          payload: ""

  computer_rig_kaoru_suspend:
    alias: "Kaoru computer - Suspend"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/rig-kaoru/commands/suspend"
          payload: ""

  computer_rig_kaoru_hibernate:
    alias: "Kaoru computer - Hibernate"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/rig-kaoru/commands/hibernate"
          payload: ""

  computer_rig_kaoru_reboot:
    alias: "Kaoru computer- Reboot"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/rig-kaoru/commands/reboot"
          payload: ""

  computer_rig_kaoru_lock:
    alias: "Kaoru computer - Lock"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/rig-kaoru/commands/lock"
          payload: ""

  computer_rig_kaoru_logoff:
    alias: "Kaoru computer - Logoff"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/rig-kaoru/commands/logoff"
          payload: ""

  computer_rig_kaoru_vol_mute:
    alias: "Kaoru computer - Toggle Mute"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/rig-kaoru/commands/volume/mute"
          payload: ""

  computer_rig_kaoru_vol_max:
    alias: "Kaoru computer - Vol Max"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/rig-kaoru/commands/volume/set"
          payload: "100"

  computer_rig_kaoru_refresh:
    alias: "Kaoru computer - Refresh"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/rig-kaoru/refresh"
          payload: ""

  # computer_rig_kaoru_change_vol:
  #     alias: "Kaoru computer - Change Vol"
  #     sequence:
  #       - service: mqtt.publish
  #         data:
  #         topic: "iotlink/workgroup/rig-kaoru/commands/volume/set"
  #         payload: " {{ states('input_number.computer_rig_kaoru_vol_slider') | int }}"


  ### COMPUTER PAPA ###
  computer_papa_shutdown:
    alias: "Papa computer - Shutdown"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/bruno/commands/shutdown"
          payload: ""

  computer_papa_suspend:
    alias: "Papa computer - Suspend"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/bruno/commands/suspend"
          payload: ""

  computer_papa_hibernate:
    alias: "Papa computer - Hibernate"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/bruno/commands/hibernate"
          payload: ""

  computer_papa_reboot:
    alias: "Papa computer- Reboot"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/bruno/commands/reboot"
          payload: ""

  computer_papa_lock:
    alias: "Papa computer - Lock"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/bruno/commands/lock"
          payload: ""

  computer_papa_logoff:
    alias: "Papa computer - Logoff"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/bruno/commands/logoff"
          payload: ""

  computer_papa_vol_mute:
    alias: "Papa computer - Toggle Mute"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/bruno/commands/volume/mute"
          payload: ""

  computer_papa_vol_max:
    alias: "Papa computer - Vol Max"
    sequence:
      - service: mqtt.publish
        data:
          topic: "iotlink/workgroup/bruno/commands/volume/set"
          payload: "100"

  # update_enedis_boutton:
  #   sequence:
  #     - service: homeassistant.update_entity
  #       entity_id: sensor.myenedis
  #     - delay:
  #         seconds: 500



  ####################################################
  #                                                  #
  #                     SCRIPTS                      #
  #                                                  #
  ####################################################

  monitors_mute:
    sequence:
      - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.monitors_mute_check
              state: 'off'
          sequence:
            - service: shell_command.monitors_mute_on
        default:
          - service: shell_command.monitors_mute_off
      - delay:
          milliseconds: 300
      - service: homeassistant.update_entity
        entity_id: binary_sensor.monitors_mute_check

  refresh_kwh_consumption:
    sequence:
      - service: browser_mod.toast
        data:
          message: Rafraîchissement de la consommation...
      - service: homeassistant.update_entity
        target:
          entity_id: sensor.myenedis_01134587449350
      - service: shell_command.enedis_update_data

  homeassistant_restart:
    sequence:
      - service: browser_mod.toast
        data:
          duration: 16000
          message: Lancement de Home Assistant container...
      - service: shell_command.ha_dockermon_restart_container

  zoned_cleanup:
    sequence:
      - condition: not
        conditions:
          - condition: state
            entity_id: input_select.roborock_zone
            state: Ingen vald
      - service: vacuum.send_command
        data:
          entity_id: vacuum.rockrobo
          command: zoned_cleanup
          params:
            zone_ids: ["{{ states('input_select.roborock_zone') }}"]

  samsung_tv_energy_saving:
    alias: Eko-läge
    icon: mdi:leaf
    sequence:
      - service: browser_mod.toast
        data:
          duration: 8000
          message: Ställer in eko-läge på Tv i sovrummet...
      - service: remote.send_command
        data:
          entity_id: remote.broadlink
          delay_secs: 1.5
          device: samsung_tv
          command:
            ['exit_15', 'settings_1', 'down_2', 'down_2' , 'down_2', 'enter_5', 'down_2', 'down_2', 'down_2',
            'down_2', 'enter_5', 'enter_5', 'down_2', 'down_2', 'enter_5', 'exit_15', 'exit_15']

  trigerred_snapshot:
    sequence:
      - service: hassio.snapshot_full
        data:
          name: >-
            trigerred_backup_{{ states("sensor.date") | replace("-", "")}}_{{
            states("sensor.time") | replace(":", "") }}

  ####################################################
  #                                                  #
  #               HOME ARRIVE / LEAVE                #
  #                                                  #
  ####################################################

  home_arrive:
    alias: Maison
    sequence:
      - choose:
        - conditions:
            - condition: state
              entity_id: light.lenovotab_screen
              state: 'on'
            - condition: state
              entity_id: switch.lenovotab_screensaver
              state: 'off'
          sequence:
            - service: media_player.play_media
              data:
                entity_id: media_player.tablet
                media_content_id: >
                  {{ ['/local/sound/tts_custom/french/bien_bonjour.mp3',
                  '/local/sound/tts_custom/french/bienvenue_maison.mp3',
                  '/local/sound/tts_custom/french/bonjour.mp3',
                  '/local/sound/tts_custom/french/salut.mp3',
                  '/local/sound/tts_custom/french/wesh.mp3'] | random }}
                media_content_type: music #Petit délire avec le wesh
      # - choose:
      #   - conditions:
      #       - condition: state
      #         entity_id: sun.sun
      #         state: below_horizon
      #     sequence:
      #       - service: scene.turn_on
      #         data:
      #           entity_id: scene.hemma_below_horizon
      #   default:
      #     - service: scene.turn_on
      #       data:
      #         entity_id: scene.hemma_above_horizon
      # - delay:
      #     seconds: 4

  home_leave:
    alias: Partir
    sequence:
      - choose:
        - conditions:
            - condition: state
              entity_id: switch.lenovotab_screensaver
              state: 'off'
          sequence:
            - service: media_player.play_media
              data:
                entity_id: media_player.tablet
                media_content_id: >
                  {{ ['/local/sound/tts_custom/french/a_bientot.mp3',
                      '/local/sound/tts_custom/french/a_plus.mp3',
                      '/local/sound/tts_custom/french/a_toute.mp3',
                      '/local/sound/tts_custom/french/tout_a_heure.mp3',
                      '/local/sound/tts_custom/french/passe_bon_moment.mp3'] | random }}
                media_content_type: music
      - service: light.turn_off
        entity_id: light.MAISON
      # - choose:
      #   - conditions:
      #       - condition: state
      #         entity_id: switch.wol_imac
      #         state: 'on'
      #     sequence:
      #       - service: switch.turn_off
      #         entity_id: switch.computer_imac
      # - choose:
      #   - conditions:
      #       - condition: state
      #         entity_id: binary_sensor.playstation_4
      #         state: 'on'
      #     sequence:
      #       - service: switch.turn_off
      #         entity_id: switch.playstation_4
      # - choose:
      #   - conditions:
      #       - condition: state
      #         entity_id: media_player.samsung
      #         state: 'on'
      #     sequence:
      #       - service: switch.turn_off
      #         entity_id: switch.tv_samsung
      - delay:
          seconds: 4
