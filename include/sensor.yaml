sensor:

    ####################################################
    #                                                  #
    #                     SENSORS                      #
    #                                                  #
    ####################################################

  - platform: file
    name: enedis_kwh
    file_path: /config/python/data.kwh

  ### Average sensor ###

  - platform: average
    precision: 1
    name: average_temperature
    entities:
      - sensor.temperature_chambre_william
      - sensor.temperature_chambre_papa
      - sensor.temperature_salon
      - sensor.temperature_cuisine

  - platform: average
    name: average_humidity
    precision: 1
    entities:
      - sensor.humidity_chambre_william
      - sensor.humidity_chambre_papa
      - sensor.humidity_salon
      - sensor.humidity_cuisine

  ### KAORU COMPUTER ###
  - platform: mqtt
    name: computer_rig_kaoru_cpu_usage
    state_topic: "iotlink/workgroup/rig-kaoru/windows-monitor/stats/cpu/usage"
    unit_of_measurement: '%'
    icon: mdi:speedometer
    value_template: "{{ value }}"
    availability_topic: "iotlink/workgroup/rig-kaoru/lwt"
    payload_available: "ON"
    payload_not_available: "OFF"
    qos: 1

  - platform: mqtt
    name: computer_rig_kaoru_ram_usage
    state_topic: "iotlink/workgroup/rig-kaoru/windows-monitor/stats/memory/usage"
    unit_of_measurement: '%'
    icon: mdi:memory
    value_template: "{{ value }}"
    availability_topic: "iotlink/workgroup/rig-kaoru/lwt"
    payload_available: "ON"
    payload_not_available: "OFF"
    qos: 1

  - platform: mqtt
    name: computer_rig_kaoru_ram_total
    state_topic: "iotlink/workgroup/rig-kaoru/windows-monitor/stats/memory/total"
    unit_of_measurement: 'MB'
    icon: mdi:memory
    value_template: "{{ value }}"
    availability_topic: "iotlink/workgroup/rig-kaoru/lwt"
    payload_available: "ON"
    payload_not_available: "OFF"
    qos: 1

  - platform: mqtt
    name: computer_rig_kaoru_uptime
    state_topic: "iotlink/workgroup/rig-kaoru/windows-monitor/stats/system/uptime"
    unit_of_measurement: 'seconds'
    icon: mdi:timer
    value_template: "{{ value }}"
    availability_topic: "iotlink/workgroup/rig-kaoru/lwt"
    payload_available: "ON"
    payload_not_available: "OFF"
    qos: 1

  - platform: mqtt
    name: "computer_rig_kaoru_disk_c_usage"
    state_topic: "iotlink/workgroup/rig-kaoru/windows-monitor/stats/hard-drive/c/drive-usage"
    unit_of_measurement: '%'
    icon: mdi:chart-donut
    value_template: "{{ value }}"
    availability_topic: "iotlink/workgroup/rig-kaoru/lwt"
    payload_available: "ON"
    payload_not_available: "OFF"
    qos: 1

  - platform: mqtt
    name: "computer_rig_kaoru_disk_d_usage"
    state_topic: "iotlink/workgroup/rig-kaoru/windows-monitor/stats/hard-drive/d/drive-usage"
    unit_of_measurement: '%'
    icon: mdi:chart-donut
    value_template: "{{ value }}"
    availability_topic: "iotlink/workgroup/rig-kaoru/lwt"
    payload_available: "ON"
    payload_not_available: "OFF"
    qos: 1

  - platform: mqtt
    name: "computer_rig_kaoru_disk_g_usage"
    state_topic: "iotlink/workgroup/rig-kaoru/windows-monitor/stats/hard-drive/g/drive-usage"
    unit_of_measurement: '%'
    icon: mdi:chart-donut
    value_template: "{{ value }}"
    availability_topic: "iotlink/workgroup/rig-kaoru/lwt"
    payload_available: "ON"
    payload_not_available: "OFF"
    qos: 1

  ### PAPA COMPUTER ###
  - platform: mqtt
    name: computer_papa_cpu_usage
    state_topic: "iotlink/workgroup/bruno/windows-monitor/stats/cpu/usage"
    unit_of_measurement: '%'
    icon: mdi:speedometer
    value_template: "{{ value }}"
    availability_topic: "iotlink/workgroup/bruno/lwt"
    payload_available: "ON"
    payload_not_available: "OFF"
    qos: 1

  - platform: mqtt
    name: computer_papa_ram_usage
    state_topic: "iotlink/workgroup/bruno/windows-monitor/stats/memory/usage"
    unit_of_measurement: '%'
    icon: mdi:memory
    value_template: "{{ value }}"
    availability_topic: "iotlink/workgroup/bruno/lwt"
    payload_available: "ON"
    payload_not_available: "OFF"
    qos: 1

  - platform: mqtt
    name: computer_papa_ram_total
    state_topic: "iotlink/workgroup/bruno/windows-monitor/stats/memory/total"
    unit_of_measurement: 'MB'
    icon: mdi:memory
    value_template: "{{ value }}"
    availability_topic: "iotlink/workgroup/bruno/lwt"
    payload_available: "ON"
    payload_not_available: "OFF"
    qos: 1

  - platform: mqtt
    name: computer_papa_uptime
    state_topic: "iotlink/workgroup/bruno/windows-monitor/stats/system/uptime"
    unit_of_measurement: 'seconds'
    icon: mdi:timer
    value_template: "{{ value }}"
    availability_topic: "iotlink/workgroup/bruno/lwt"
    payload_available: "ON"
    payload_not_available: "OFF"
    qos: 1

  - platform: mqtt
    name: "computer_papa_disk_c_usage"
    state_topic: "iotlink/workgroup/bruno/windows-monitor/stats/hard-drive/c/drive-usage"
    unit_of_measurement: '%'
    icon: mdi:chart-donut
    value_template: "{{ value }}"
    availability_topic: "iotlink/workgroup/bruno/lwt"
    payload_available: "ON"
    payload_not_available: "OFF"
    qos: 1

  - platform: mqtt
    name: "computer_papa_disk_d_usage"
    state_topic: "iotlink/workgroup/bruno/windows-monitor/stats/hard-drive/d/drive-usage"
    unit_of_measurement: '%'
    icon: mdi:chart-donut
    value_template: "{{ value }}"
    availability_topic: "iotlink/workgroup/bruno/lwt"
    payload_available: "ON"
    payload_not_available: "OFF"
    qos: 1

  - platform: version
    name: hass_version_installed

  - platform: version
    name: hass_version_latest
    source: docker

  - platform: version
    name: hass_version_latest_beta
    beta: true
    source: docker

  - platform: filesize
    file_paths:
      - /config/home-assistant.log

  - platform: sql
    db_url: !secret recorder_db_url
    queries:
      - name: Database
        query: SELECT ROUND(page_count * page_size / 1024 / 1024, 1) as size FROM pragma_page_count(), pragma_page_size();
        column: size
        unit_of_measurement: "MiB"

  - platform: uptime
    unit_of_measurement: minutes

  - platform: time_date
    display_options:
      ['time', 'date']

  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_use_percent
      - type: processor_use
      - type: last_boot
      - type: throughput_network_in
        arg: eth0
      - type: throughput_network_out
        arg: eth0
      - type: processor_temperature

  - platform: dnsip

  - platform: rest
    name: fullykiosk
    json_attributes:
      ['internalStorageFreeSpace', 'internalStorageTotalSpace',
      'ramFreeMemory', 'ramTotalMemory']
    resource: !secret fullykiosk_rest_resource
    value_template: '{{ value_json.screenOn }}'
    scan_interval: 900

  - platform: rest
    name: hass_release_notes
    resource: https://api.github.com/repos/home-assistant/core/releases/latest
    value_template: '{{ value_json.name }}'
    json_attributes: [body]
    scan_interval: 21600

  - platform: rest
    name: hass_release_notes_rc
    resource: https://api.github.com/repos/home-assistant/core/releases?per_page=1
    value_template: '{{ value_json[0].name }}'
    json_attributes: [body]
    scan_interval: 21600

  - platform: rest
    name: docker_cpu
    resource: !secret ha_dockermon_cpu
    value_template: >
      {% set cpuDelta = value_json.cpu_stats.cpu_usage.total_usage - value_json.precpu_stats.cpu_usage.total_usage %}
      {% set systemDelta = value_json.cpu_stats.system_cpu_usage - value_json.precpu_stats.system_cpu_usage %}
      {{ (cpuDelta / systemDelta * value_json.cpu_stats.cpu_usage.percpu_usage | length * 100) | round(1) }}
    json_attributes:
      ['cpu_stats', 'precpu_stats', 'memory_stats']

  - platform: rest
    name: docker_uptime
    resource: !secret ha_dockermon_uptime
    value_template: >
      {{ 'Depuis'  + value_json.status.split(' ')[1:] | join(' ') | replace ('environ une minute', '1 minute')
      | replace ('About an hour', 'une heure')  | replace ('seconds', 'secondes') | replace ('minutes', 'minutes')
      | replace ('hours', 'heures') | replace ('days', 'jours')}}

  - platform: plex_recently_added
    token: !secret plex_token
    host: !secret plex_host
    port: !secret plex_port
    max: 1
    img_dir: '/'
    image_resolution: 700

    # enedis
  # - platform: myEnedis
  #   token: !secret enedis_token
  #   code: !secret enedis_usage_point_id
  #   scan_interval: 3600

  - platform: rest
    name: ilevia_ligne_1
    resource: !secret ilevia_ligne_1
    scan_interval: 3600
    headers:
      Content-Type: application/json
      Authorization: !secret mel_token_api
    value_template: >
      {% if value_json.records|length %}
        OK
      {% elif value_json['errorcode'] == 10001 %}
        You have exceeded your quota of 3000 api calls per day
      {% else %}
        Pas de bus
      {% endif %}
    json_attributes:
      - "records"
      - "facet_groups"

  - platform: rest
    name: ilevia_ligne_2
    resource: !secret ilevia_ligne_2
    scan_interval: 3600
    headers:
      Content-Type: application/json
      Authorization: !secret mel_token_api
    value_template: >
      {% if value_json.records|length %}
        OK
      {% elif value_json['errorcode'] == 10001 %}
        You have exceeded your quota of 3000 api calls per day
      {% else %}
        Pas de bus
      {% endif %}
    json_attributes:
      - "records"
      - "facet_groups"

  - platform: rest
    name: ilevia_ligne_3
    resource: !secret ilevia_ligne_3
    scan_interval: 3600
    headers:
      Content-Type: application/json
      Authorization: !secret mel_token_api
    value_template: >
      {% if value_json.records|length %}
        OK
      {% elif value_json['errorcode'] == 10001 %}
        You have exceeded your quota of 3000 api calls per day
      {% else %}
        Pas de bus
      {% endif %}
    json_attributes:
      - "records"
      - "facet_groups"

  - platform: rest
    name: ilevia_ligne_4
    resource: !secret ilevia_ligne_4
    scan_interval: 3600
    headers:
      Content-Type: application/json
      Authorization: !secret mel_token_api
    value_template: >
      {% if value_json.records|length %}
        OK
      {% elif value_json['errorcode'] == 10001 %}
        You have exceeded your quota of 3000 api calls per day
      {% else %}
        Pas de bus
      {% endif %}
    json_attributes:
      - "records"
      - "facet_groups"


    ####################################################
    #                                                  #
    #                   COMMAND LINE                   #
    #                                                  #
    ####################################################


  - platform: command_line
    name: hacs_version
    scan_interval: 86400
    command: grep -oP 'VERSION = "\K[^"]+' custom_components/hacs/const.py

  - platform: command_line
    command: !secret google_home_next_timer
    name: next_timer
    value_template: >
      {% if value_json is defined %}
        {% set timer = value_json.timer|sort(attribute='fire_time') %}
        {% if timer[0] is defined %}
          {{ timer[0].fire_time }}
        {% else %}
          None
        {% endif %}
      {% endif %}

  - platform: command_line
    name: OS_version
    scan_interval: 86400
    command: echo $(cat /etc/issue.net) $(uname -sr)

  - platform: template
    scan_interval: 1
    sensors:
      next_timer_human:
        value_template: >
          {% if states('sensor.next_timer') == "None" or states('sensor.next_timer') == "" %}
            Pas de timer
          {% elif states('sensor.next_timer') == "unavailable" or states('sensor.next_timer') == "unknown" %}
            Google Home indisponible
          {% elif (( states('sensor.next_timer')|int/1000 - as_timestamp(now()) - 3600) | timestamp_custom('%H') | int ) >= 1 %}
            {{ ( states('sensor.next_timer')|int/1000 - as_timestamp(now()) - 3600) | timestamp_custom('%H h %M m %S s') }}
          {% elif (( states('sensor.next_timer')|int/1000 - as_timestamp(now()) - 3600) | timestamp_custom('%M') | int ) >= 1 %}  {{ ( states('sensor.next_timer')|int/1000 - as_timestamp(now()) - 3600) | timestamp_custom('%M m %S s') }}
          {% else %}
            {{ ( states('sensor.next_timer')|int/1000 - as_timestamp(now()) - 3600) | timestamp_custom('%S s') }}
          {% endif %}
        friendly_name: Next timer
        icon_template: 'mdi:server'
